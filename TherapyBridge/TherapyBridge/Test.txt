                    // self.handleLandmark(outerLips, faceBoundingBox: faceRectConverted)
                    
                    // Add colored points to each of the 14 points (for debugging)
                    /*
                    let colors: [UIColor] = [
                        .red, .orange, .yellow, .green, .blue, .purple, .gray,
                        .white, .orange, .yellow, .white, .blue, .purple, .black
                    ]

                    for (index, point) in outerLips.normalizedPoints.enumerated() {
                        guard index < colors.count else { break }

                        let convertedPoint = CGPoint(
                            x: point.y * faceRectConverted.height + faceRectConverted.origin.x,
                            y: point.x * faceRectConverted.width + faceRectConverted.origin.y
                        )

                        // Assign variables for specific points
                        switch index {
                        case 3:
                            topPoint = convertedPoint
                        case 7:
                            rightCornerPoint = convertedPoint
                        case 10:
                            bottomPoint = convertedPoint
                        case 13:
                            leftCornerPoint = convertedPoint
                        default:
                            break
                        }

                        let pointLayer = CAShapeLayer()
                        pointLayer.path = CGPath(ellipseIn: CGRect(x: convertedPoint.x - 2, y: convertedPoint.y - 2, width: 4, height: 4), transform: nil)
                        pointLayer.fillColor = colors[index].cgColor

                        self.faceLayers.append(pointLayer)
                        self.view.layer.addSublayer(pointLayer)
                    }
                    */





        /*
        let landmarkPath = CGMutablePath()
        let landmarkPathPoints = eye.normalizedPoints
            .map({ eyePoint in
                CGPoint(
                    x: eyePoint.y * faceBoundingBox.height + faceBoundingBox.origin.x,
                    y: eyePoint.x * faceBoundingBox.width + faceBoundingBox.origin.y)
            })
        landmarkPath.addLines(between: landmarkPathPoints)
        landmarkPath.closeSubpath()
        let landmarkLayer = CAShapeLayer()
        landmarkLayer.path = landmarkPath
        landmarkLayer.fillColor = UIColor.clear.cgColor
        landmarkLayer.strokeColor = UIColor.green.cgColor

        self.faceLayers.append(landmarkLayer)
        self.view.layer.addSublayer(landmarkLayer)
        */